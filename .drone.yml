kind: pipeline
name: php-fpm-7.4

environment:
  APP_VER: 7.4.6

platform:
  os: linux
  arch: amd64

#concurrency:
#  limit: 1

volumes:
  - name: docker
    host:
      path: /var/cache/drone/${DRONE_REPO}/${DRONE_STAGE_NAME}

steps:
- name: setup
  image: alpine
  commands:
    - echo -e -n "$${APP_VER}-${DRONE_BUILD_NUMBER}" > .tags
    - echo -e -n ",$${APP_VER}" >> .tags
    - echo -e -n ",$${APP_VER%.*}" >> .tags
    - echo -e -n ",$${APP_VER%%.*}" >> .tags

- name: publish
  image: plugins/docker
  environment:
    APP_VER_BUILD: "${DRONE_BUILD_NUMBER}"
    APP_BUILD_COMMIT: "${DRONE_COMMIT_SHA:0:7}"
    APP_BUILD_DATE: "${DRONE_BUILD_FINISHED}"
  settings:
    repo: izdock/php-fpm
    build_args_from_env:
    - IMAGE_FROM
    - APP_VER
    - APP_VER_BUILD
    - APP_BUILD_COMMIT
    - APP_BUILD_DATE
    - MULTISERVICE
    username:
      from_secret: DOCKER_USERNAME
    password:
      from_secret: DOCKER_PASSWORD
  volumes:
  - name: docker
    path: /var/lib/docker
  when:
    event: [push, tag]
    branch: master

---
kind: pipeline
name: php-fpm-apache

environment:
  APP_VER: 7.4.6
  MULTISERVICE: "true"

platform:
  os: linux
  arch: amd64

#concurrency:
#  limit: 1

volumes:
  - name: docker
    host:
      path: /var/cache/drone/${DRONE_REPO}/${DRONE_STAGE_NAME}

depends_on:
  # must run after the first pipeline
  - php-fpm-7.4x

trigger:
  status:
    # only runs if the first pipeline was fully successful
    - success

steps:
- name: setup
  image: alpine
  commands:
    - echo -e -n "$${APP_VER}-fpm-apache-${DRONE_BUILD_NUMBER}" > .tags
    - echo -e -n ",$${APP_VER}-fpm-apache" >> .tags
    - echo -e -n ",$${APP_VER%.*}-fpm-apache" >> .tags
    - echo -e -n ",$${APP_VER%%.*}-fpm-apache" >> .tags
    - echo -e -n ",latest" >> .tags

- name: publish
  image: plugins/docker
  environment:
    APP_VER_BUILD: "${DRONE_BUILD_NUMBER}"
    APP_BUILD_COMMIT: "${DRONE_COMMIT_SHA:0:7}"
    APP_BUILD_DATE: "${DRONE_BUILD_FINISHED}"
  settings:
    repo: izdock/php-fpm
    dockerfile: Dockerfile-apache
    build_args_from_env:
    - IMAGE_FROM
    - APP_VER
    - APP_VER_BUILD
    - APP_BUILD_COMMIT
    - APP_BUILD_DATE
    - MULTISERVICE
    username:
      from_secret: DOCKER_USERNAME
    password:
      from_secret: DOCKER_PASSWORD
  volumes:
  - name: docker
    path: /var/lib/docker
  when:
    event: [push, tag]
    branch: master
